{"name": "test_joinclass_success", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <TestCases.test_class.Test_class object at 0x0000000003B44438>\nclass_driver = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"ccde924e5305ca2d16ae3a0dad789595\")>, <PageObject.Home_page.Home_page object at 0x00000000043F28D0>)\n\n    @pytest.mark.usefixtures(\"class_driver\")\n    def test_joinclass_success(self,class_driver):\n        class_driver[1].add_class(cd.right_code['code'])\n        time.sleep(1)\n>       class_driver[1].skip()\n\nTestCases\\test_class.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObject\\Home_page.py:32: in skip\n    self.ele_click(loc.loc_skip,\"加入课程成功后弹出提示中点击跳过\")\nCommon\\basepage.py:56: in ele_click\n    ele = self.ele_find(loc,doc,timeout,frequency)\nCommon\\basepage.py:41: in ele_find\n    self.ele_wait_visible(loc,doc,timeout,frequency)\nCommon\\basepage.py:33: in ele_wait_visible\n    raise e\nCommon\\basepage.py:29: in ele_wait_visible\n    WebDriverWait(self.driver,timeout,frequency).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ccde924e5305ca2d16ae3a0dad789595\")>, method = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x00000000043F2C88>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nG:\\Python\\Python36\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "start": 1584698069509, "stop": 1584698097253, "uuid": "e779cd8f-b631-41b7-b272-6965fbd908af", "historyId": "5531889def9b88de98c21587f7a7be91", "testCaseId": "1ad5b9f5ae61fa56d34f514cac1b3d7c", "fullName": "TestCases.test_class.Test_class#test_joinclass_success", "labels": [{"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_class"}, {"name": "subSuite", "value": "Test_class"}, {"name": "host", "value": "L2A1NMLBONTMN6R"}, {"name": "thread", "value": "16524-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_class"}]}